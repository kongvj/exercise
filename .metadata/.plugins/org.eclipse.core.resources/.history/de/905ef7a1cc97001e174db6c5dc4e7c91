package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.demo.entity.Player;
import com.example.demo.service.PlayerService;

/**
 * ユーザー情報 Controller
 */
@Controller
@RequestMapping("/color")
class TestController {

    @GetMapping("/index")
    fun colorList(model: Model, @PageableDefault(size = 3) pageable: Pageable) : String {
        val colorList = listOf("red","blue","green","brown","orange","yellow","black","gray")
        val start = pageable.offset.toInt()
        val end = (start + pageable.pageSize).coerceAtMost(colorList.size)
        val page = PageImpl(colorList.subList(start, end), pageable, colorList.size.toLong())
        model.addAttribute("colorList", page.content)
        model.addAttribute("page", page)
        return "index"
    }
}
@Configuration
class WebConfig(): WebMvcConfigurer {

    @Override
    override fun addArgumentResolvers(resolvers: MutableList<HandlerMethodArgumentResolver>) {
        val resolver = PageableHandlerMethodArgumentResolver()
        //１ページ当たりの表示数
        resolver.setMaxPageSize(3)
        resolvers.add(resolver)
        super.addArgumentResolvers(resolvers)
    }
}